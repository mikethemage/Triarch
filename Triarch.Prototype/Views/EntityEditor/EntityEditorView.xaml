<UserControl x:Class="Triarch.Prototype.Views.EntityEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vmee="clr-namespace:Triarch.Prototype.ViewModels.EntityEditor"
             xmlns:c="clr-namespace:Triarch.Prototype.Converters"
             xmlns:local="clr-namespace:Triarch.Prototype.Views"
             mc:Ignorable="d" 
             d:Background="White"
             d:DesignHeight="550" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=vmee:EntityEditorViewModel}">
    <Grid>
        <Grid.Resources>
            <c:NullVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <c:NullVisibilityConverter x:Key="NullToBooleanConverter"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" MinHeight="250" />
            <RowDefinition Height="170" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Button Margin="5,5,5,10" Height="35" Width="80" Content="Close" HorizontalAlignment="Stretch" Command="{Binding Path=BackCommand}" />
            <Button Margin="5,5,5,10" Height="35" Width="80" Content="Save" HorizontalAlignment="Stretch" Command="{Binding Path=SaveCommand}"/>
            <Button Margin="5,5,5,10" Height="35" Width="80" Content="Save As" HorizontalAlignment="Stretch" Command="{Binding Path=SaveAsCommand}"/>
            <Button Margin="5,5,5,10" Height="35" Width="80" Content="Export to Text" HorizontalAlignment="Stretch" Command="{Binding Path=ExportTextCommand}"/>
        </StackPanel>
        <Grid Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*" MinWidth="300"/>
                
                <ColumnDefinition Width="3*" MinWidth="30"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label  Content="{Binding Path=EntityNameLabelText}" Margin="10,10,10,5" Width="Auto" Height="28" Grid.Column="0" />
                    <TextBox VerticalContentAlignment="Center" Margin="10,10,10,5" Text="{Binding Path=EntityName}" Grid.Column="1" />
                </Grid>
                <Grid Grid.Row="1" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label  Content="Genre: " Margin="10,10,10,5" Width="Auto" Grid.Column="0" />
                    <ComboBox x:Name="GenreComboBox" Margin="10,10,10,5" Height="28"  ItemsSource="{Binding Path=GenreList}" SelectedItem="{Binding Path=SelectedGenre}" Grid.Column="1">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=DisplayText}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>
                </Grid>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="100" />
                    </Grid.ColumnDefinitions>
                    <TreeView x:Name="CharacterTreeView" Margin="10,10,10,10" HorizontalAlignment="Stretch" ItemsSource="{Binding Path=EntityElements.RootElements}" Grid.Column="0">
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="x:Type vm:EntityElementListItemViewModel" ItemsSource="{Binding Path=Children}">
                                <TextBlock Text="{Binding Path=DisplayText}"  />
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <Setter Property="IsExpanded" Value="True" />
                                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                    <StackPanel Grid.Column="1" Margin="10,5,10,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Button x:Name="MoveUpButton" Content="Move Up" Margin="5,5,5,5" Height="35" HorizontalAlignment="Stretch" Command="{Binding Path=MoveUpCommand}"/>
                        <Button x:Name="MoveDownButton" Content="Move Down" Margin="5,15,5,5" Height="35" HorizontalAlignment="Stretch" Command="{Binding Path=MoveDownCommand}" />
                        <Button x:Name="DelAttButton" Content="Delete" Margin="5,15,5,5" Height="35" HorizontalAlignment="Stretch" Command="{Binding Path=DeleteCommand}" />
                    </StackPanel>
                </Grid>
                
            </Grid>
            

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" DataContext="{Binding Path=SelectedElement.VariantList}" Visibility="{Binding Path=., Converter={StaticResource NullToVisibilityConverter}}" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Label x:Name="VariantLabel" Content="Variant:" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="0" />
                    <ListBox x:Name="VariantListBox" IsTextSearchEnabled="True" TextSearch.TextPath="DisplayText" Margin="5" ItemsSource="{Binding VariantList}" SelectedItem="{Binding Selected}" Grid.Row="1">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=DisplayText}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Filter: " Margin="5,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" />
                    <ComboBox x:Name="FilterComboBox" Margin="10,10,5,0" Height="28" HorizontalAlignment="Stretch" VerticalAlignment="Center" ItemsSource="{Binding SelectedElement.AllowedChildrenList.FilterList}" SelectedItem="{Binding SelectedElement.AllowedChildrenList.SelectedFilter}" Grid.Column="1">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=DisplayName}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>
                </Grid>


                <ListBox IsTextSearchEnabled="True" TextSearch.TextPath="DisplayName" x:Name="AddChildListBox" Margin="5" ItemsSource="{Binding SelectedElement.AllowedChildrenList.GroupedAllowedChildrenList}" SelectedItem="{Binding SelectedElement.AllowedChildrenList.SelectedChild}" Grid.Row="2" MouseDoubleClick="AddChildListBox_MouseDoubleClick" KeyDown="AddChildListBox_KeyDown">
                    <ListBox.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock FontSize="14" FontWeight="Bold" Text="{Binding Name}"/>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListBox.GroupStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=DisplayName}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                <Button x:Name="AddAttButton" Content="Add" Margin="5,15,5,5" Height="35" HorizontalAlignment="Stretch" Command="{Binding Path=AddCommand}" Grid.Row="3" />
            </Grid>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <local:GenericElementDataView DataContext="{Binding SelectedElement}" Grid.Column="0"/>
            <local:CharacterDataView DataContext="{Binding SelectedElement.CharacterData}" Visibility="{Binding Path=., Converter={StaticResource NullToVisibilityConverter}}" Margin="10 10 10 10" Grid.Column="1"/>
            <local:LevelableDataView DataContext="{Binding SelectedElement.LevelableData}" Visibility="{Binding Path=., Converter={StaticResource NullToVisibilityConverter}}" Margin="10 10 10 10" Grid.Column="1"/>
        </Grid>
    </Grid>
</UserControl>
